# arm-none-eabi-g++ -c -O2 -g -Wall -ffunction-sections -fdata-sections -nostdlib -MMD -std=gnu++14 -fno-exceptions -fpermissive -fno-rtti -fno-threadsafe-statics -felide-constructors -Wno-error=narrowing -mthumb -mcpu=cortex-m7 -mfloat-abi=hard -mfpu=fpv5-d16 -D__IMXRT1062__ -DTEENSYDUINO=147 -DARDUINO=10809 -DF_CPU=600000000 -DUSB_SERIAL -DLAYOUT_US_ENGLISH *.cpp -o /tmp/*.cpp.o
# arm-none-eabi-gcc -c -O2 -g -Wall -ffunction-sections -fdata-sections -nostdlib -MMD -mthumb -mcpu=cortex-m7 -mfloat-abi=hard -mfpu=fpv5-d16 -D__IMXRT1062__ -DTEENSYDUINO=147 -DARDUINO=10809 -DF_CPU=600000000 -DUSB_SERIAL -DLAYOUT_US_ENGLISH *.c -o /tmp/*.c.o
# arm-none-eabi-gcc -O2 -Wl,--gc-sections,--relax -Timxrt1062.ld -mthumb -mcpu=cortex-m7 -mfloat-abi=hard -mfpu=fpv5-d16 -o /tmp/arduino_build_84583/sketch_sep14a.ino.elf /tmp/arduino_build_84583/sketch/sketch_sep14a.ino.cpp.o /tmp/arduino_build_84583/core/core.a -L/tmp/arduino_build_84583 -larm_cortexM7lfsp_math -lm -lstdc++

CPUARCH = cortex-m7
DEFS = -DUSB_SERIAL -D__IMXRT1062__ -DTEENSYDUINO=147 -DARDUINO=10809 -DF_CPU=600000000 -DLAYOUT_US_ENGLISH
SECTIONS = -ffunction-sections -fdata-sections
CPPFLAGS = -Wall -g -O2 $(SECTIONS) -nostdlib -MMD -mthumb -mcpu=$(CPUARCH) -mfloat-abi=hard -mfpu=fpv5-d16 -I. $(DEFS)
CXXFLAGS = -std=gnu++14 -fno-exceptions -fpermissive -fno-rtti -fno-threadsafe-statics -felide-constructors -Wno-error=narrowing
#LDFLAGS = -Wl,--gc-sections,--print-gc-sections,--print-memory-usage --specs=nano.specs -nostdlib -nostartfiles -Timxrt1062.ld
LDFLAGS = -Wl,--gc-sections,--relax,--print-memory-usage -Timxrt1062.ld
LDFLAGS += -larm_cortexM7lfsp_math -lm -lstdc++
SFLAGS = -x assembler-with-cpp
# -lc
# /root/prog/github/arduino-sdk/teensy/tools/arm/bin/arm-none-eabi-gcc --print-multi-lib

S_FILES := $(wildcard *.S)
C_FILES := $(wildcard *.c)
CPP_FILES := $(wildcard *.cpp)

OBJS := $(C_FILES:.c=.o) $(CPP_FILES:.cpp=.o) $(S_FILES:.S=.o)

COMPILERPATH = $(abspath $(CURDIR)/../tools/arm/bin)
CC = $(COMPILERPATH)/arm-none-eabi-gcc
CXX = $(COMPILERPATH)/arm-none-eabi-g++
OBJCOPY = $(COMPILERPATH)/arm-none-eabi-objcopy
OBJDUMP = $(COMPILERPATH)/arm-none-eabi-objdump
SIZE = $(COMPILERPATH)/arm-none-eabi-size
AR = $(COMPILERPATH)/arm-none-eabi-gcc-ar
#LD = $(COMPILERPATH)/arm-none-eabi-gcc

all: Blink.elf

Blink.elf: Blink.o core.a
#Blink.elf: Blink.o
	$(CC) $(CPPFLAGS) $(LDFLAGS) -o $@ $^
	#$(CC) -g -Wall -ffunction-sections -fdata-sections -nostdlib -MMD -mthumb -mcpu=cortex-m7 -mfloat-abi=hard -mfpu=fpv5-d16 -D__IMXRT1062__ -DTEENSYDUINO=147 -std=gnu++14 -fno-exceptions -fpermissive -fno-rtti -fno-threadsafe-statics -felide-constructors -Wno-error=narrowing -x assembler-with-cpp -Wl,--gc-sections,--relax -Timxrt1062.ld -larm_cortexM7lfsp_math -lm -lstdc++ -o $@ $^ -lm
	#$(CC) $(CPPFLAGS) $(LDFLAGS) -o $@ Blink.o $(OBJS) -lm
	#$(CC) $(CPPFLAGS) $(LDFLAGS) -o $@ Blink.o $(S_FILES) $(C_FILES) $(CPP_FILES) -lm -larm_cortexM7lfsp_math
	$(OBJDUMP) -d -S -C $@ > Blink.lst
	$(OBJDUMP) -t -C $@ > Blink.sym
	$(OBJCOPY) -O ihex -R .eeprom $@ Blink.hex
	$(SIZE) $@

core.a: $(OBJS)
	$(AR) rcs core.a $(OBJS)


clean:
	rm -f *.o *.d core.a *.elf *.lst *.sym *.hex

